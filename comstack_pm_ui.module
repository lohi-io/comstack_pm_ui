<?php

/**
 * @file
 * comstack_pm_ui.module
 */

/**
 * Implements hook_permission().
 */
function comstack_pm_ui_permission() {
  return array(
    'access ComstackPMApp' => array(
      'title' => t('Access the Comstack Private Messaging UI'),
      'description' => t('Allows users access to the Private Messaging UI which is an Angular App. For this to work permissions for Comstack Private Messaging must be configured properly.'),
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function comstack_pm_ui_libraries_info() {
  $libraries = array();

  $libraries['ng-tags-input'] = array(
    'name' => 'ngTagsInput',
    'vendor url' => 'http://mbenford.github.io/ngTagsInput',
    'version arguments' => array(
      'file' => 'ng-tags-input.js',
      'pattern' => '/v([0-9.]+)/',
      'lines' => 2,
    ),
    'files' => array(
      'js' => array('ng-tags-input.js'),
      'css' => array(
        'ng-tags-input.css',
        'ng-tags-input.bootstrap.css',
      ),
    ),
    'variants' => array(
      'minified' => array(
        'files' => array(
          'js' => array('ng-tags-input.min.js'),
          'css' => array(
            'ng-tags-input.min.css',
            'ng-tags-input.bootstrap.min.css',
          ),
        ),
      ),
    ),
    'dependencies' => array(
      'angularjs (>=1.3.0)',
    ),
  );

  $libraries['angularjs-scroll-glue'] = array(
    'name' => 'angularjs-scroll-glue',
    'vendor url' => 'https://github.com/Luegg/angularjs-scroll-glue',
    'version arguments' => array(
      'file' => 'scrollglue.js',
      'pattern' => '/version ([0-9.]+)/',
      'lines' => 5,
    ),
    'path' => 'src',
    'files' => array(
      'js' => array('scrollglue.js'),
    ),
    'dependencies' => array(
      'angularjs',
    ),
  );

  // This library is a pest with inconsistent naming hmph.
  $libraries['angular-bootstrap'] = array(
    'name' => 'Angular UI Bootstrap',
    'vendor url' => 'http://angular-ui.github.io/bootstrap/',
    'version arguments' => array(
      'file' => 'ui-bootstrap-tpls.js',
      'pattern' => '/Version: ([0-9.]+)/',
      'lines' => 6,
    ),
    'files' => array(
      'js' => array('ui-bootstrap-tpls.js'),
    ),
    'variants' => array(
      'minified' => array(
        'files' => array(
          'js' => array('ui-bootstrap-tpls.min.js'),
        ),
      ),
    ),
    'dependencies' => array(
      'angularjs',
    ),
  );

  // The AngularJS library is defined by the comstack module (unless it's been)
  // told not to.
  $libraries['ComstackPMApp'] = array(
    'name' => 'ComstackPMApp',
    'vendor url' => 'https://github.com/lohi-io/ComstackPMApp/',
    'version arguments' => array(
      'file' => 'package.json',
      'pattern' => '/"version": "([0-9.]+)",/',
      'lines' => 5,
    ),
    'path' => 'app',
    'files' => array(
      'js' => array('js/ComstackPMApp.js'),
      'css' => array('css/app.css'),
    ),
    'dependencies' => array(
      'angularjs (>=1.4.5)',
      'ui-router (>=0.2.15)',
      'angular-resource',
      'moment',
      'modernizr',
      'angularjs-scroll-glue',
      'ng-tags-input',
      'angular-bootstrap',
    ),
  );

  return $libraries;
}

/**
 * Implements hook_menu().
 */
function comstack_pm_ui_menu() {
  $items = array();

  $path = variable_get('comstack_pm_ui_app_path', 'messaging');
  $items[$path] = array(
    'title' => 'Private Messaging',
    'page callback' => 'comstack_pm_ui_page_callback',
    'access arguments' => array('access ComstackPMApp'),
  );

  return $items;
}

/**
 * Add the necessary settings and JavaScript to the page to pass to the app.
 */
function comstack_pm_ui_add_js() {
  // Not sure on the best way to do this...
  $settings = drupal_json_encode(comstack_pm_ui_app_get_settings());
  drupal_add_js("var Comstack = Comstack || {};Comstack.PMApp = {};Comstack.PMApp.Settings = $settings;", array(
    'type' => 'inline',
    'scope' => 'header',
  ));

  // Finally, add the library.
  libraries_load('ComstackPMApp');
}

/**
 * Page callback for the App.
 */
function comstack_pm_ui_page_callback() {
  comstack_pm_ui_add_js();

  return theme('comstack_angular', array(
    'app' => 'ComstackPMApp',
    'ui_view' => TRUE,
  ));
}

function comstack_pm_ui_app_get_settings() {
  // For now lets just do URL, and try for https if possible.
  // @todo
  // v1 shouldn't be there but we'll come back to this, the App should be
  // specifying the API version to use on its side.
  global $user;

  // Replacements.
  $account_url = url('user/', array('absolute' => TRUE, 'https' => TRUE)) . '@user_id@/account-settings';
  $friends_url = url('friends/', array('absolute' => TRUE, 'https' => TRUE)) . '@user_id@';

  $settings = array(
    'base_url' => rtrim(url('', array('absolute' => TRUE, 'https' => TRUE)), '/'),
    'api_url' => url('api/v1', array('absolute' => TRUE, 'https' => TRUE)),
    'library_path' => url(libraries_get_path('ComstackPMApp'), array('absolute' => TRUE, 'https' => TRUE)),
    'csrf_token' => restful_csrf_session_token()['X-CSRF-Token'],
    'strings' => array(
      'text__read_only' => t('You\'re currently opted out of private messaging, <a href="!account_url">click here</a> to go the the account settings form.', array('!account_url' => $account_url)),
      'form__new_conversation__header' => t('You must be friends with a person before you can send them messages. <a href="!account_url">Find and add friends</a>', array('!account_url' => $account_url)),
      'text__no_conversations' => t('!friends_url', array('!friends_url' => $friends_url)),
    ),
  );

  // Let other modules alter things.
  drupal_alter('comstack_pm_ui_settings', $settings);

  return $settings;
}
